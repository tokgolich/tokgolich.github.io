<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Apache Ambari-2.7.4.0 Centos7离线安装</title>
    <url>/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="Ambari"><a href="#Ambari" class="headerlink" title="Ambari"></a>Ambari</h2><ul>
<li>Ambari 跟 Hadoop 等开源软件一样，也是 Apache Software Foundation 中的一个项目，并且是顶级项目。就 Ambari 的作用来说，就是创建、管理、监视 Hadoop 的集群，但是这里的 Hadoop 指的是 Hadoop 整个生态圈（例如 Hive，Hbase，Sqoop，Zookeeper 等）， 而并不仅是特指 Hadoop。用一句话来说，Ambari 就是为了让 Hadoop 以及相关的大数据软件更容易使用的一个工具。</li>
<li>Ambari 自身也是一个分布式架构的软件，主要由两部分组成：Ambari Server 和 Ambari Agent。简单来说，用户通过 Ambari Server 通知 Ambari Agent 安装对应的软件；Agent 会定时地发送各个机器每个软件模块的状态给 Ambari Server，最终这些状态信息会呈现在 Ambari 的 GUI，方便用户了解到集群的各种状态，并进行相应的维护。</li>
</ul>
<a id="more"></a>

<h2 id="HDP"><a href="#HDP" class="headerlink" title="HDP"></a>HDP</h2><ul>
<li>HDP是hortonworks的软件栈，里面包含了hadoop生态系统的所有软件项目，比如HBase,Zookeeper,Hive,Pig等等。</li>
</ul>
<h2 id="HDP-UTILS"><a href="#HDP-UTILS" class="headerlink" title="HDP-UTILS"></a>HDP-UTILS</h2><ul>
<li>HDP-UTILS是工具类库。</li>
</ul>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="Ambari、HDP版本介绍"><a href="#Ambari、HDP版本介绍" class="headerlink" title="Ambari、HDP版本介绍"></a>Ambari、HDP版本介绍</h2><ul>
<li>Ambari 2.7.4.0支持HDP-3.1.4使用以下URL确定对每个产品版本的支持<br><a href="https://supportmatrix.hortonworks.com/" target="_blank" rel="noopener">https://supportmatrix.hortonworks.com/</a>，以及下载报告</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220201704962.png" alt="image-20200220201704962"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220201743769.png" alt="image-20200220201743769"></p>
<h2 id="搭建环境准备"><a href="#搭建环境准备" class="headerlink" title="搭建环境准备"></a>搭建环境准备</h2><h3 id="软件要求"><a href="#软件要求" class="headerlink" title="软件要求"></a>软件要求</h3><table>
<thead>
<tr>
<th align="center">组件</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">操作系统</td>
<td align="center">Centos 7.7</td>
</tr>
<tr>
<td align="center">Ambari</td>
<td align="center">2.7.4.0</td>
</tr>
<tr>
<td align="center">HDP</td>
<td align="center">3.1.4.0</td>
</tr>
<tr>
<td align="center">HDP-GPL</td>
<td align="center">3.1.4.0</td>
</tr>
<tr>
<td align="center">HDP-UTILS</td>
<td align="center">1.1.0.22</td>
</tr>
<tr>
<td align="center">Mysql</td>
<td align="center">5.7</td>
</tr>
<tr>
<td align="center">JDK8</td>
<td align="center">jdk1.8.0_221</td>
</tr>
<tr>
<td align="center">scala</td>
<td align="center">2.11.12</td>
</tr>
<tr>
<td align="center">X86</td>
<td align="center">X86-64</td>
</tr>
</tbody></table>
<h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><ul>
<li>Centos 7清华镜像 <a href="https://mirrors.tuna.tsinghua.edu.cn/centos/7/isos/x86_64/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/centos/7/isos/x86_64/</a></li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220202924124.png" alt="image-20200220202924124"></p>
<ul>
<li>Ambari 2.7.4.0安装包下载地址：<a href="https://docs.cloudera.com/HDPDocuments/Ambari-2.7.4.0/bk_ambari-installation/content/ambari_repositories.html" target="_blank" rel="noopener">https://docs.cloudera.com/HDPDocuments/Ambari-2.7.4.0/bk_ambari-installation/content/ambari_repositories.html</a></li>
<li>HDP 3.1.4.0、HDP-GPL-3.1.4.0 和 HDP-UTILS 1.1.0.22安装包下载地址：<a href="https://docs.cloudera.com/HDPDocuments/Ambari-2.7.4.0/bk_ambari-installation/content/hdp_314_repositories.html" target="_blank" rel="noopener">https://docs.cloudera.com/HDPDocuments/Ambari-2.7.4.0/bk_ambari-installation/content/hdp_314_repositories.html</a></li>
<li>MySQL 5.7</li>
<li>OracleJDK8 1.8.0_221下载地址：<a href="https://www.oracle.com/technetwork/cn/java/javase/downloads/java-archive-javase8-2177648-zhs.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/cn/java/javase/downloads/java-archive-javase8-2177648-zhs.html</a></li>
</ul>
<h2 id="集群节点规划准备"><a href="#集群节点规划准备" class="headerlink" title="集群节点规划准备"></a>集群节点规划准备</h2><table>
<thead>
<tr>
<th align="center">Hostname</th>
<th align="center">IP</th>
<th align="center">Functions</th>
<th align="center">CPU</th>
<th align="center">内存</th>
<th align="center">硬盘</th>
</tr>
</thead>
<tbody><tr>
<td align="center">yunm.hdp</td>
<td align="center">192.168.2.77</td>
<td align="center">Ambari/HDP packages</td>
<td align="center">4C</td>
<td align="center">8G</td>
<td align="center">200G</td>
</tr>
<tr>
<td align="center">nd-00.hdp</td>
<td align="center">192.168.2.100</td>
<td align="center">Ambari Server</td>
<td align="center">4C</td>
<td align="center">8G</td>
<td align="center">200G</td>
</tr>
<tr>
<td align="center">nd-01.hdp</td>
<td align="center">192.168.2.101</td>
<td align="center">Compute node</td>
<td align="center">4C</td>
<td align="center">8G</td>
<td align="center">200G</td>
</tr>
<tr>
<td align="center">nd-02.hdp</td>
<td align="center">192.168.2.102</td>
<td align="center">Compute node</td>
<td align="center">4C</td>
<td align="center">8G</td>
<td align="center">200G</td>
</tr>
</tbody></table>
<h1 id="搭建虚拟机"><a href="#搭建虚拟机" class="headerlink" title="搭建虚拟机"></a>搭建虚拟机</h1><ul>
<li>搭建yum.hdp虚拟机，然后完成克隆，虚拟机搭建完毕。</li>
</ul>
<h2 id="搭建yum-hdp虚拟机"><a href="#搭建yum-hdp虚拟机" class="headerlink" title="搭建yum.hdp虚拟机"></a>搭建yum.hdp虚拟机</h2><p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203046966.png" alt="image-20200220203046966"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203059759.png" alt="image-20200220203059759"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203110491.png" alt="image-20200220203110491"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203122553.png" alt="image-20200220203122553"></p>
<h2 id="配置yum-hdp虚拟机"><a href="#配置yum-hdp虚拟机" class="headerlink" title="配置yum.hdp虚拟机"></a>配置yum.hdp虚拟机</h2><h3 id="配置静态IP"><a href="#配置静态IP" class="headerlink" title="配置静态IP"></a>配置静态IP</h3><ul>
<li>打开文件：vi /etc/sysconfig/network-scripts/ifcfg-ens192</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203240722.png" alt="image-20200220203240722"></p>
<ul>
<li>重启：service network start</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203311168.png" alt="image-20200220203311168"></p>
<ul>
<li>查看：ifconfig【安装命令：yum -y install net-tools】</li>
</ul>
<h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><ul>
<li>查看防火墙的状态：systemctl status firewalld.service</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203726175.png" alt="image-20200220203726175"></p>
<ul>
<li>关闭防火墙：systemctl stop firewalld.service</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203751452.png" alt="image-20200220203751452"></p>
<ul>
<li>设置开机不启动：systemctl disable firewalld.service</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203847349.png" alt="image-20200220203847349"></p>
<ul>
<li>查看防火墙服务是否设置开机启动：systemctl is-enabled firewalld.service</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220203917637.png" alt="image-20200220203917637"></p>
<h3 id="设置hostname"><a href="#设置hostname" class="headerlink" title="设置hostname"></a>设置hostname</h3><ul>
<li>设置hosts：vi /etc/hosts</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204121994.png" alt="image-20200220204121994"></p>
<ul>
<li>修改：vi /etc/sysconfig/network</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204157475.png" alt="image-20200220204157475"></p>
<ul>
<li>执行：hostnamectl set-hostname yum.hdp</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204208509.png" alt="image-20200220204208509"></p>
<h3 id="安装时间同步服务（ntp）"><a href="#安装时间同步服务（ntp）" class="headerlink" title="安装时间同步服务（ntp）"></a>安装时间同步服务（ntp）</h3><ul>
<li><p>安装：yum install -y ntp</p>
</li>
<li><p>启动并查看状态：</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start ntpd.service</span><br><span class="line">systemctl status ntpd.service</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204341095.png" alt="image-20200220204341095"></p>
<ul>
<li>设置开机自启：systemctl enable ntpd.service</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204349178.png" alt="image-20200220204349178"></p>
<h3 id="安装并配置JDK"><a href="#安装并配置JDK" class="headerlink" title="安装并配置JDK"></a>安装并配置JDK</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar –xvzf jdk-8u221-linux-x64.tar.gz</span><br><span class="line"> </span><br><span class="line">vi /etc/profile</span><br><span class="line">export JAVA_HOME=/opt/jdk1.8.0_221</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">source /etc/profile</span><br><span class="line"> </span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

<h3 id="安装并配置scala"><a href="#安装并配置scala" class="headerlink" title="安装并配置scala"></a>安装并配置scala</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar –xvzf scala-2.11.12.tgz</span><br><span class="line"> </span><br><span class="line">vi /etc/profile</span><br><span class="line">export SCALA_HOME=/opt/scala-2.11.12</span><br><span class="line">export PATH=$PATH:$SCALA_HOME/bin</span><br><span class="line">source /etc/profile</span><br><span class="line"> </span><br><span class="line">scala -version</span><br></pre></td></tr></table></figure>

<h3 id="关闭Selinux和THP（如果不关闭THP，Hadoop的系统CPU使用率很高）"><a href="#关闭Selinux和THP（如果不关闭THP，Hadoop的系统CPU使用率很高）" class="headerlink" title="关闭Selinux和THP（如果不关闭THP，Hadoop的系统CPU使用率很高）"></a>关闭Selinux和THP（如果不关闭THP，Hadoop的系统CPU使用率很高）</h3><ul>
<li>查看状态：sestatus</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204627146.png" alt="image-20200220204627146"></p>
<ul>
<li>关闭：vim /etc/sysconfig/selinux</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204649551.png" alt="image-20200220204649551"></p>
<ul>
<li>如果出现下述结果说明启动了THP</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204703098.png" alt="image-20200220204703098"></p>
<ul>
<li>永久关闭：vim /etc/rc.d/rc.local</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if test -f /sys/kernel/mm/transparent_hugepage/enabled; then</span><br><span class="line">        echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line">fi</span><br><span class="line">if test -f /sys/kernel/mm/transparent_hugepage/defrag; then</span><br><span class="line">        echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204715380.png" alt="image-20200220204715380"></p>
<ul>
<li>保存退出，然后赋予rc.local文件执行权限：chmod +x /etc/rc.d/rc.local</li>
<li>重启：reboot</li>
</ul>
<h3 id="最大打开文件要求"><a href="#最大打开文件要求" class="headerlink" title="最大打开文件要求"></a>最大打开文件要求</h3><ul>
<li>建议的最大打开文件描述符数为10000或更多。</li>
<li>修改配置文件 vi /etc/security/limits.conf</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*       soft    nofile  65535</span><br><span class="line">*       hard    nofile  65535</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204746159.png" alt="image-20200220204746159"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204753727.png" alt="image-20200220204753727"></p>
<h2 id="克隆yum-hdp虚拟机"><a href="#克隆yum-hdp虚拟机" class="headerlink" title="克隆yum.hdp虚拟机"></a>克隆yum.hdp虚拟机</h2><h3 id="开始克隆"><a href="#开始克隆" class="headerlink" title="开始克隆"></a>开始克隆</h3><ul>
<li>克隆另外三台虚拟机：yum.hdp、nd-00.hdp、nd-01.hdp、nd-02.hdp</li>
</ul>
<h3 id="修改参数"><a href="#修改参数" class="headerlink" title="修改参数"></a>修改参数</h3><ul>
<li>启动nd-00.hdp，nd-01.hdp，nd-02.hdp虚拟机，并修改虚拟机的IP地址</li>
<li>vi /etc/sysconfig/network-scripts/ifcfg-ens192</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204933844.png" alt="image-20200220204933844"></p>
<ul>
<li>重启network：service network start</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220204946224.png" alt="image-20200220204946224"></p>
<ul>
<li>修改虚拟机hostname：vi /etc/sysconfig/network</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205002542.png" alt="image-20200220205002542"></p>
<ul>
<li>修改虚拟机hostname：hostnamectl set-hostname nd-00.hdp</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205015834.png" alt="image-20200220205015834"></p>
<ul>
<li>关闭虚拟机，并重新分配内存</li>
</ul>
<h3 id="在nd-00-hdp虚拟机上安装mysql"><a href="#在nd-00-hdp虚拟机上安装mysql" class="headerlink" title="在nd-00.hdp虚拟机上安装mysql"></a>在nd-00.hdp虚拟机上安装mysql</h3><ul>
<li><p>下载并安装mysql【yum install wget】</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动mysql并设置开机自启</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld.service    # 启动mysql</span><br><span class="line">systemctl status mysqld.service  # 查看mysql状态</span><br><span class="line">systemctl stop mysqld.service   # 关闭mysql</span><br><span class="line">systemctl enable mysqld.service   # 开机自启</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205154210.png" alt="image-20200220205154210"></p>
<ul>
<li>此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码：cat /var/log/mysqld.log | grep pass</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205203712.png" alt="image-20200220205203712"></p>
<ul>
<li>输入初始密码，此时不能做任何事情，因为MySQL默认必须修改密码之后才能操作数据库</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=1;</span><br><span class="line">ALTER USER 'root'@'localhost' IDENTIFIED BY 'root123';</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205214164.png" alt="image-20200220205214164"></p>
<ul>
<li>但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y remove mysql57-community-release-el7-10.noarch</span><br></pre></td></tr></table></figure>

<ul>
<li>配置mysql编码，字符格式：vim /etc/my.cnf</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">在[mysqld]下添加</span><br><span class="line">collation_server=utf8_general_ci</span><br><span class="line">character_set_server=utf8</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">在[client]下添加（如果没有[client]，则创建）</span><br><span class="line">default_character-set=utf8</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205230941.png" alt="image-20200220205230941"></p>
<ul>
<li>重启mysql服务：systemctl restart mysqld.service</li>
<li>查看字符集： show variables like ‘character_set_%’ ;</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205239792.png" alt="image-20200220205239792"></p>
<h3 id="在mysql数据库创建相应的用户和DB"><a href="#在mysql数据库创建相应的用户和DB" class="headerlink" title="在mysql数据库创建相应的用户和DB"></a>在mysql数据库创建相应的用户和DB</h3><ul>
<li>创建ambari数据库及数据库的用户名和密码</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=1;</span><br><span class="line">create database ambari character set utf8;</span><br><span class="line">CREATE USER 'ambari'@'%'IDENTIFIED BY 'Ambari123';</span><br><span class="line">GRANT ALL PRIVILEGES ON ambari.* TO 'ambari'@'%';</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205516910.png" alt="image-20200220205516910"></p>
<ul>
<li>创建hive数据库及hive库的用户名和密码</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">create database hive character set utf8;</span><br><span class="line">CREATE USER 'hive'@'%'IDENTIFIED BY 'Hive123';</span><br><span class="line">GRANT ALL PRIVILEGES ON hive.* TO 'hive'@'%';</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205531051.png" alt="image-20200220205531051"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205541563.png" alt="image-20200220205541563"></p>
<ul>
<li>下载mysql-connection-java：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install mysql-connector-java</span><br></pre></td></tr></table></figure>

<ul>
<li>查看下载后的jar包，看目录中是否有mysql-connector-java:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls /usr/share/java/mysql-connector-java.jar</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205552949.png" alt="image-20200220205552949"></p>
<h3 id="免密登录"><a href="#免密登录" class="headerlink" title="免密登录"></a>免密登录</h3><ul>
<li>配置本地hosts文件</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205653230.png" alt="image-20200220205653230"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205708704.png" alt="image-20200220205708704"></p>
<ul>
<li>nd-00.hdp ⇒ 00，01，02的免密登录：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@nd-00 ~]# ssh-keygen -t rsa        # 一路回车</span><br><span class="line">[root@nd-00 ~]# ssh-copy-id nd-00.hdp    # 输入密码</span><br><span class="line">[root@nd-00 ~]# ssh-copy-id nd-01.hdp    # 输入密码</span><br><span class="line">[root@nd-00 ~]# ssh-copy-id nd-02.hdp    # 输入密码</span><br></pre></td></tr></table></figure>

<ul>
<li>nd-01.hdp ⇒ 01，02的免密登录：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@nd-01 ~]# ssh-keygen -t rsa        # 一路回车</span><br><span class="line">[root@nd-01 ~]# ssh-copy-id nd-01.hdp    # 输入密码</span><br><span class="line">[root@nd-01 ~]# ssh-copy-id nd-02.hdp    # 输入密码</span><br></pre></td></tr></table></figure>

<h1 id="在yum-hdp上安装Ambari"><a href="#在yum-hdp上安装Ambari" class="headerlink" title="在yum.hdp上安装Ambari"></a>在yum.hdp上安装Ambari</h1><h2 id="安装yum相关工具"><a href="#安装yum相关工具" class="headerlink" title="安装yum相关工具"></a>安装yum相关工具</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yum ~]# yum install yum-utils -y</span><br><span class="line">[root@yum ~]# yum repolist</span><br><span class="line">[root@yum ~]# yum install createrepo -y</span><br></pre></td></tr></table></figure>

<h2 id="安装Apache-httpd"><a href="#安装Apache-httpd" class="headerlink" title="安装Apache httpd"></a>安装Apache httpd</h2><ul>
<li>上传下载文件hdp-3.1.4（借助xftp工具）</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205840641.png" alt="image-20200220205840641"></p>
<ul>
<li>使用yum在线安装httpd</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install httpd -y</span><br></pre></td></tr></table></figure>

<ul>
<li>启动httpd服务：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start httpd        # 启动httpd</span><br><span class="line">systemctl status httpd        # 查看httpd状态</span><br><span class="line">systemctl enable httpd        # 设置httpd开机自启</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205853444.png" alt="image-20200220205853444"></p>
<ul>
<li>默认端口80，浏览器输入：<a href="http://yum.hdp" target="_blank" rel="noopener">http://yum.hdp</a></li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205906904.png" alt="image-20200220205906904"></p>
<ul>
<li>httpd 会生成 /var/www/html目录（相当于Tomcat的webapps目录），进入到/var/www/html目录下，创建ambari和hdp目录，用来存放安装文件。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /var/www/html/ambari</span><br><span class="line">mkdir /var/www/html/hdp</span><br><span class="line">mkdir /var/www/html/hdp/HDP-UTILS-1.1.0.22</span><br><span class="line">mkdir /var/www/html/hdp/HDP-GPL-3.1.4.0</span><br><span class="line">tar -zxvf ambari-2.7.4.0-centos7.tar.gz -C /var/www/html/ambari/</span><br><span class="line">tar -zxvf HDP-3.1.4.0-centos7-rpm.tar.gz -C /var/www/html/hdp/</span><br><span class="line">tar -zxvf HDP-UTILS-1.1.0.22-centos7.tar.gz -C /var/www/html/hdp/HDP-UTILS-1.1.0.22/</span><br><span class="line">tar -zxvf HDP-GPL-3.1.4.0-centos7-gpl.tar.gz -C /var/www/html/hdp/HDP-GPL-3.1.4.0/</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205924855.png" alt="image-20200220205924855"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220205934705.png" alt="image-20200220205934705"></p>
<h2 id="配置本地-Repo"><a href="#配置本地-Repo" class="headerlink" title="配置本地 Repo"></a>配置本地 Repo</h2><h3 id="配置Ambari"><a href="#配置Ambari" class="headerlink" title="配置Ambari"></a>配置Ambari</h3><ul>
<li>修改配置文件：ambari.repo</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">VERSION_NUMBER=2.7.4.0-118</span></span><br><span class="line">[ambari-2.7.4.0]</span><br><span class="line"><span class="meta">#</span><span class="bash">json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json</span></span><br><span class="line">name=ambari Version - ambari-2.7.4.0</span><br><span class="line">baseurl=http://yum.hdp/ambari/ambari/centos7/2.7.4.0-118</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://yum.hdp/ambari/ambari/centos7/2.7.4.0-118/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br><span class="line">enabled=1</span><br><span class="line">priority=1</span><br></pre></td></tr></table></figure>

<ul>
<li>配置HDP、HDP-UTILS、HDP-GPL</li>
<li>修改配置文件：hdp.repo</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">VERSION_NUMBER=3.1.4.0-315</span></span><br><span class="line">[HDP-3.1.4.0]</span><br><span class="line">name=HDP Version - HDP-3.1.4.0</span><br><span class="line">baseurl=http://yum.hdp/hdp/HDP/centos7</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://yum.hdp/hdp/HDP/centos7/3.1.4.0-315/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br><span class="line">enabled=1</span><br><span class="line">priority=1</span><br><span class="line"></span><br><span class="line">[HDP-UTILS-1.1.0.22]</span><br><span class="line">name=HDP-UTILS Version - HDP-UTILS-1.1.0.22</span><br><span class="line">baseurl=http://yum.hdp/hdp/HDP-UTILS-1.1.0.22</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://yum.hdp/hdp/HDP-UTILS-1.1.0.22/HDP-UTILS/centos7/1.1.0.22/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br><span class="line">enabled=1</span><br><span class="line">priority=1</span><br></pre></td></tr></table></figure>

<ul>
<li>修改配置文件：hdp.gpl.repo</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">VERSION_NUMBER=3.1.4.0-315</span></span><br><span class="line">[HDP-GPL-3.1.4.0]</span><br><span class="line">name=HDP-GPL Version - HDP-GPL-3.1.4.0</span><br><span class="line">baseurl=http://yum.hdp/hdp/HDP-GPL-3.1.4.0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://yum.hdp/hdp/HDP-GPL-3.1.4.0/HDP-GPL/centos7/3.1.4.0-315/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br><span class="line">enabled=1</span><br><span class="line">priority=1</span><br></pre></td></tr></table></figure>

<h3 id="分发ambari-repo和hdp-repo、hdp-gpl-repo"><a href="#分发ambari-repo和hdp-repo、hdp-gpl-repo" class="headerlink" title="分发ambari.repo和hdp.repo、hdp.gpl.repo"></a>分发ambari.repo和hdp.repo、hdp.gpl.repo</h3><ul>
<li>repo文件放到/etc/yum.repos.d</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220210120836.png" alt="image-20200220210120836"></p>
<ul>
<li>把repo文件分发到各个节点的相同目录下</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp ambari.repo hdp.repo hdp.gpl.repo nd-00.hdp:$PWD</span><br><span class="line">scp ambari.repo hdp.repo hdp.gpl.repo nd-01.hdp:$PWD</span><br><span class="line">scp ambari.repo hdp.repo hdp.gpl.repo nd-02.hdp:$PWD</span><br></pre></td></tr></table></figure>

<h3 id="生成本地源"><a href="#生成本地源" class="headerlink" title="生成本地源"></a>生成本地源</h3><ul>
<li>使用createrepo命令，创建yum本地源（软件仓库），即为存放本地特定位置的众多rpm包建立索引，描述各包所需依赖信息，并形成元数据。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">createrepo /var/www/html/hdp/HDP/centos7/</span><br><span class="line">createrepo /var/www/html/hdp/HDP-UTILS-1.1.0.22/</span><br><span class="line">createrepo /var/www/html/hdp/HDP-GPL-3.1.4.0/</span><br><span class="line">createrepo /var/www/html/ambari/ambari/centos7/2.7.4.0-118/</span><br></pre></td></tr></table></figure>

<h1 id="安装Ambari-Server"><a href="#安装Ambari-Server" class="headerlink" title="安装Ambari-Server"></a>安装Ambari-Server</h1><h2 id="nd-00-hdp-节点安装"><a href="#nd-00-hdp-节点安装" class="headerlink" title="nd-00.hdp 节点安装"></a>nd-00.hdp 节点安装</h2><ul>
<li>安装ambari-server</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install ambari-server</span><br><span class="line">ambari-server setup</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(base) -bash-4.2# ambari-server setup</span><br><span class="line">Using python  /usr/bin/python</span><br><span class="line">Setup ambari-server</span><br><span class="line">Checking SELinux...</span><br><span class="line">SELinux status is 'disabled'</span><br><span class="line">Customize user account for ambari-server daemon [y/n] (n)? y</span><br><span class="line">Enter user account for ambari-server daemon (root):root</span><br><span class="line">Adjusting ambari-server permissions and ownership...</span><br><span class="line">Checking firewall status...</span><br><span class="line">Checking JDK...</span><br><span class="line">[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8</span><br><span class="line">[2] Custom JDK</span><br><span class="line">==============================================================================</span><br><span class="line">Enter choice (1): 2</span><br><span class="line">WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.</span><br><span class="line">WARNING: JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.</span><br><span class="line">Path to JAVA_HOME: /opt/jdk1.8.0_221</span><br><span class="line">Validating JDK on Ambari Server...done.</span><br><span class="line">Check JDK version for Ambari Server...</span><br><span class="line">JDK version found: 8</span><br><span class="line">Minimum JDK version is 8 for Ambari. Skipping to setup different JDK for Ambari Server.</span><br><span class="line">Checking GPL software agreement...</span><br><span class="line">GPL License for LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html</span><br><span class="line">Enable Ambari Server to download and install GPL Licensed LZO packages [y/n] (n)? y</span><br><span class="line">Completing setup...</span><br><span class="line">Configuring database...</span><br><span class="line">Enter advanced database configuration [y/n] (n)? y</span><br><span class="line">Configuring database...</span><br><span class="line">==============================================================================</span><br><span class="line">Choose one of the following options:</span><br><span class="line">[1] - PostgreSQL (Embedded)</span><br><span class="line">[2] - Oracle</span><br><span class="line">[3] - MySQL / MariaDB</span><br><span class="line">[4] - PostgreSQL</span><br><span class="line">[5] - Microsoft SQL Server (Tech Preview)</span><br><span class="line">[6] - SQL Anywhere</span><br><span class="line">[7] - BDB</span><br><span class="line">==============================================================================</span><br><span class="line">Enter choice (1): 3</span><br><span class="line">Hostname (localhost): nd-00</span><br><span class="line">Port (3306): 3306</span><br><span class="line">Database name (ambari): </span><br><span class="line">Username (ambari): </span><br><span class="line">Enter Database Password (bigdata):     #密码不显示：Ambari123</span><br><span class="line">Re-enter password: </span><br><span class="line">Configuring ambari database...</span><br><span class="line">Should ambari use existing default jdbc /usr/share/java/mysql-connector-java.jar [y/n] (y)? y</span><br><span class="line">Configuring remote database connection properties...</span><br><span class="line">WARNING: Before starting Ambari Server, you must run the following DDL directly from the database shell to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</span><br><span class="line">Proceed with configuring remote database connection properties [y/n] (y)? y</span><br><span class="line">Extracting system views...</span><br><span class="line">ambari-admin-2.7.4.0.118.jar</span><br><span class="line">....</span><br><span class="line">Ambari repo file contains latest json url http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json, updating stacks repoinfos with it...</span><br><span class="line">Adjusting ambari-server permissions and ownership...</span><br><span class="line">Ambari Server 'setup' completed successfully.</span><br><span class="line">(base) -bash-4.2#</span><br></pre></td></tr></table></figure>

<ul>
<li>使用root登录，设置允许远程登录</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=1;</span><br><span class="line">GRANT ALL PRIVILEGES ON ambari.* TO 'ambari'@'localhost' IDENTIFIED BY 'Ambari123';</span><br><span class="line">GRANT ALL PRIVILEGES ON ambari.* TO 'ambari'@'%' IDENTIFIED BY 'Ambari123';</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用ambari登录</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220210351496.png" alt="image-20200220210351496"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">source</span> /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行完，查看有无报错信息，并查看数据表</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show tables;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220210403897.png" alt="image-20200220210403897"></p>
<h2 id="启动Ambari-Server"><a href="#启动Ambari-Server" class="headerlink" title="启动Ambari-Server"></a>启动Ambari-Server</h2><ul>
<li>如果启动失败，关闭服务【ambari-server stop】，重新启动</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(base) -bash-4.2# ambari-server start</span><br><span class="line">Using python  /usr/bin/python</span><br><span class="line">Starting ambari-server</span><br><span class="line">Ambari Server running with administrator privileges.</span><br><span class="line">Organizing resource files at /var/lib/ambari-server/resources...</span><br><span class="line">Ambari database consistency check started...</span><br><span class="line">Server PID at: /var/run/ambari-server/ambari-server.pid</span><br><span class="line">Server out at: /var/log/ambari-server/ambari-server.out</span><br><span class="line">Server log at: /var/log/ambari-server/ambari-server.log</span><br><span class="line">Waiting for server start................................</span><br><span class="line">Server started listening on 8080</span><br><span class="line"></span><br><span class="line">DB configs consistency check: no errors and warnings were found.</span><br><span class="line">Ambari Server 'start' completed successfully.</span><br></pre></td></tr></table></figure>

<h2 id="安装Agent"><a href="#安装Agent" class="headerlink" title="安装Agent"></a>安装Agent</h2><ul>
<li>nd-00/01/02.hdp 所有节点安装ambari-agent</li>
</ul>
<p><code>yum -y install ambari-agent</code></p>
<h2 id="访问Ambari-web页面"><a href="#访问Ambari-web页面" class="headerlink" title="访问Ambari web页面"></a>访问Ambari web页面</h2><p>默认端口8080，Username：admin；Password：admin；<a href="http://192.168.121.100:8080" target="_blank" rel="noopener">http://192.168.121.100:8080</a></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220210612837.png" alt="image-20200220210612837"></p>
<h1 id="开始安装集群"><a href="#开始安装集群" class="headerlink" title="开始安装集群"></a>开始安装集群</h1><ul>
<li>配置集群名称</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211102777.png" alt="image-20200220211102777"></p>
<ul>
<li>选择版本</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211115145.png" alt="image-20200220211115145"></p>
<ul>
<li>配置节点、密钥</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211127892.png" alt="image-20200220211127892"></p>
<ul>
<li>主机确认</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211139211.png" alt="image-20200220211139211"></p>
<ul>
<li>选择大数据组件</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211148792.png" alt="image-20200220211148792"></p>
<ul>
<li>节点分配</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211157937.png" alt="image-20200220211157937"></p>
<ul>
<li>分配从属和客户端</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211206645.png" alt="image-20200220211206645"></p>
<ul>
<li>定制服务</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211215821.png" alt="image-20200220211215821"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211224207.png" alt="image-20200220211224207"></p>
<p><code>ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar</code></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211233909.png" alt="image-20200220211233909"></p>
<ul>
<li>集群整体概况，点击部署</li>
</ul>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211245700.png" alt="image-20200220211245700"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211259349.png" alt="image-20200220211259349"></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211311916.png" alt="image-20200220211311916"></p>
<ul>
<li><p>等待启动完毕，不用担心警告，后期可以调整，搭建完成，可以在展示页面进行查看集群状态。</p>
</li>
<li><p>可以查看监控界面，可以看到大数据组件中出现错误，单个组件点开处理，由于本次搭建集群使用虚拟机，性能不好，可以少选择一些组件。</p>
</li>
</ul>
<h1 id="安装问题整理"><a href="#安装问题整理" class="headerlink" title="安装问题整理"></a>安装问题整理</h1><h2 id="python-版本问题"><a href="#python-版本问题" class="headerlink" title="python 版本问题"></a>python 版本问题</h2><ul>
<li>python3环境运行报错，改成python2</li>
</ul>
<p><code>vi /usr/bin/hdp-select</code></p>
<p><img src="/2020/02/20/Apache-Ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/image-20200220211348465.png" alt="image-20200220211348465"></p>
<h2 id="openssl版本的问题："><a href="#openssl版本的问题：" class="headerlink" title="openssl版本的问题："></a>openssl版本的问题：</h2><ul>
<li>EOF occurred in violation of protocol</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO 2018-08-09 16:39:42,666 NetUtil.py:70 - Connecting to https://xxxx:8440/ca</span><br><span class="line">ERROR 2018-08-09 16:39:42,669 NetUtil.py:96 - EOF occurred in violation of protocol (_ssl.c:579)</span><br><span class="line">ERROR 2018-08-09 16:39:42,669 NetUtil.py:97 - SSLError: Failed to connect. Please check openssl library versions.</span><br><span class="line">Refer to: https://bugzilla.redhat.com/show_bug.cgi?id=1022468 for more details.</span><br><span class="line">WARNING 2018-08-09 16:39:42,669 NetUtil.py:124 - Server at https://xxxx:8440 is not reachable, sleeping for 10 seconds...</span><br><span class="line">INFO 2018-08-09 16:39:52,669 NetUtil.py:70 - Connecting to https://xxxx:8440/ca</span><br><span class="line">ERROR 2018-08-09 16:39:52,672 NetUtil.py:96 - EOF occurred in violation of protocol (_ssl.c:579)</span><br><span class="line">ERROR 2018-08-09 16:39:52,672 NetUtil.py:97 - SSLError: Failed to connect. Please check openssl library versions.</span><br><span class="line">Refer to: https://bugzilla.redhat.com/show_bug.cgi?id=1022468 for more details.</span><br><span class="line">WARNING 2018-08-09 16:39:52,672 NetUtil.py:124 - Server at https://xxxx:8440 is not reachable, sleeping for 10 seconds...</span><br></pre></td></tr></table></figure>

<ul>
<li>在集群中所有的节点中修改配置文件, 更改协议.<code>vi /etc/ambari-agent/conf/ambari-agent.ini</code>中加入</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[security]</span><br><span class="line">force_https_protocol=PROTOCOL_TLSv1_2</span><br></pre></td></tr></table></figure>

<ul>
<li>然后重启ambari-agent.</li>
</ul>
]]></content>
      <categories>
        <category>大数据</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Ambari</tag>
        <tag>大数据</tag>
        <tag>Centos7</tag>
        <tag>HDP</tag>
      </tags>
  </entry>
  <entry>
    <title>ChainLink、预言机与两个世界的连接</title>
    <url>/2020/02/20/ChainLink-the-oracle-connecting-the-two-worlds/</url>
    <content><![CDATA[<p>互联网诞生之后，人们有现实世界，也有了互联网世界。如今，人们又有了一个新的世界：加密世界。这是区块链带给人们的礼物。</p>
<p>在过去二十多年，创新者们不断融合着现实和互联网世界，两者相互融入，难以分开。在比特币诞生后十多年后，加密世界也加快了跟现实世界交互的脚步。从蓝狐笔记的角度，加密世界和现实世界的融合会是未来二十年最重要的发展线之一，可以与人工智能和物联网并驾齐驱。</p>
<a id="more"></a>

<h2 id="加密世界vs-现实世界"><a href="#加密世界vs-现实世界" class="headerlink" title="加密世界vs 现实世界"></a><strong>加密世界vs 现实世界</strong></h2><p>纯粹的加密世界跟现实世界有不同的运行逻辑。</p>
<p>加密世界运行在链上，通过共识机制、密码学以及分布式节点等来保证其不可篡改性，实现不依赖于第三方的信任。智能合约运行在链上，同样，没人可以修改其代码，也无法干扰其运行，这包括智能合约的创建者。在智能合约中，其执行逻辑是，如果发生了x，那么就会执行y，这里的结果是确定性的。智能合约可以自我验证自我执行，它代表了加密世界的可信赖。</p>
<p>而在现实世界中，很难有全局的确定性共识，充满各种不确定的可能，例如应用是可以被修改、被终止的。在这种情况下，加密世界和现实世界的融合存在挑战。互联网世界可以将现实世界的部分搬到网上，例如将报纸杂志搬到网上，成为新媒体；将各种线下的零售店搬到网上就变成了网店。而加密世界跟现实世界的融合更复杂。</p>
<p>那么，两个世界如何沟通？有没有可能沟通？这就是预言机存在的意义。蓝狐笔记之前介绍了DeFi领域中的交易协议Uniswap（《<a href="http://mp.weixin.qq.com/s?__biz=MzAwOTk1NjM0NQ==&mid=2247488923&idx=1&sn=98af351abb121ad6834b7e6b70022fcc&chksm=9b56eb0dac21621bf4e59658630cb93b32f00fd80b0a751cde7ca92325cf9654c3cf9718348d&scene=21#wechat_redirect" target="_blank" rel="noopener">一文读懂Uniswap</a>》）和Kyber（《<a href="http://mp.weixin.qq.com/s?__biz=MzAwOTk1NjM0NQ==&mid=2247488932&idx=1&sn=ad78289ddcc89f682b8e5befa94648eb&chksm=9b56eb32ac2162242ae4e9d0587ad5dcc1446043a6fca7a8980e14a82e87af052a997c6ab1b2&scene=21#wechat_redirect" target="_blank" rel="noopener">Kyber的淡出与起势</a>》）。今天蓝狐笔记介绍DeFi中的预言机领域。</p>
<h2 id="预言机连通加密世界和现实世界"><a href="#预言机连通加密世界和现实世界" class="headerlink" title="预言机连通加密世界和现实世界"></a><strong>预言机连通加密世界和现实世界</strong></h2><p>加密世界和现实世界的沟通需要预言机。在蓝狐笔记看来，预言机是连接两个不同世界的“中间件”。</p>
<p>如果加密世界仅仅满足于货币类应用，那么，仅仅通过加密世界内部也可以完成，例如比特币的交易。但，如果想要更丰富的服务，想要满足更多的需求，想要将智能合约的潜力发挥到最大，那么，很有必要为智能合约引入来自现实世界的数据。</p>
<p>有人会问，为什么区块链不直接获取这些数据？无法直接获取。上面也提到过，因为这两个世界的运行逻辑不同。区块链上的数据都是通过共识机制达成的全局共识，而现实世界的数据并非都是共识的结果。两个世界的连通需要可靠的预言机。通过预言机提供可信的数据，转换成为区块链可读可用的数据。</p>
<p>加密世界需要哪些现实世界的数据？从目前发展看，迄今为止，需求最大的是DeFi领域，DeFi中MakerDAO、Compound、Synthetix、dYdX等都需要预言机提供的价格数据流服务。</p>
<p>随着智能合约的发展，会有更多的场景需要链外的数据。例如合成资产智能合约，可能需要来自于纳斯达克、纽交所的价格数据流；房产智能合约，可能需要来房地产市场的数据流；保险智能合约，例如航班延误险需要航班活动的数据流；贸易金融智能合约，可能需要获取GPS相关数据等。此外，随着人工智能和物联网的发展，智能合约对现实世界数据的需求只会越来越大。</p>
<p>除了将现实世界数据引入加密世界，加密世界的数据也可以进入现实世界。例如从链上向链下输出数据，以支付消息的形式被路由到支付网络等。</p>
<h2 id="安全是预言机的关键"><a href="#安全是预言机的关键" class="headerlink" title="安全是预言机的关键"></a><strong>安全是预言机的关键</strong></h2><p>对预言机来说，中心化或去中心化不是目的，其目的是要实现安全的可靠的数据送达服务。（从蓝狐笔记的角度，“去中心化”这个词并不是很好的表达，“分散化”或“分布式”是更恰当的描述，因为从目前实践来看，没有真正的去中心化，只是节点更多更分散而已）</p>
<p>智能合约的代码逻辑执行中，一旦发生了X，就会触发Y。这种方式保证了可信赖、透明；但是，如果输入的数据是错误的，那么，也会带来损失。就像上面提到的Synthetix案例一样，由于其输入的韩元价格数据是正常价格的1000多倍，导致产生严重后果。Synthetix是合成资产交易平台，用户通过抵押SNX代币生成合成资产。合成资产可以是BTC、ETH这些加密货币，也可以是特斯拉股票、大宗商品等。不管是加密货币还是股票、黄金，Synthetix的合成资产交易都需要精确的资产价格数据流。一旦价格数据出现问题，后果不堪设想。</p>
<p>同样，MakerDAO协议中用户使用ETH进行抵押，可以生成稳定币Dai，其抵押率在150%以上，假如输入的ETH数据是恶意的，它导致大多数用户资产被清算，且还有14%的罚金。如发生这种极端情况，MakerDAO系统将无法运行下去。同样，Compound、dYdX等DeFi项目也是如此，都需要预言机提供正确的价格数据流，以保证其系统安全。</p>
<p>可以说，预言机是DeFi领域大多数项目的共同问题（Uniswap除外，它无须预言机提供价格数据服务）。如果没有安全的预言机，DeFi大厦就没有稳固的地基，也无法扩展壮大。目前DeFi已经锁定超过6.8亿美元价值的资产，且还在持续发展中，如果预言机出问题，几乎是不可承受之重。</p>
<p>既然中心化预言机有潜在安全问题，那么，如何获得更安全的预言机服务？关于这一点，ChainLink早在2017年就提出来了，不得不说，这在当时是具有远见卓识的，毕竟2017年DeFi还没有发展起来，预言机的需求也不明显。</p>
<h2 id="ChainLink预言机如何连接两个世界"><a href="#ChainLink预言机如何连接两个世界" class="headerlink" title="ChainLink预言机如何连接两个世界"></a><strong>ChainLink预言机如何连接两个世界</strong></h2><p>上述可以得出两点：一是，预言机是加密世界和现实世界实现沟通的不可或缺的“中间件”。这决定了其重要地位，会有越来越大的市场规模。二是，预言机安全非常重要，它是很多智能合约，尤其是DeFi大厦的基础构建块，安全是其安身立命之本。</p>
<p>那么，ChainLink是如何来连接加密世界和现实世界的？</p>
<p><img src="/2020/02/20/ChainLink-the-oracle-connecting-the-two-worlds/image-20200220171328504.png" alt="image-20200220171328504"></p>
<center>（ChainLink的ETH/USD价格数据流，21个节点提供服务）</center>
### **ChainLink预言机的工作流程**

<p>ChainLink预言机的工作流程大致有如下几步：</p>
<ul>
<li>用户智能合约（USER-SC）从链上发出请求</li>
<li>ChainLink智能合约（CHAINLINK-SC）为预言机记录一个事件</li>
<li>ChainLink Core接到事件，并路由任务，给到适配器</li>
<li>ChainLink适配器向外部API发出请求</li>
<li>ChainLink适配器处理响应，并将其返回给Core</li>
<li>ChainLink Core将数据报告给ChainLink智能合约（CHAINLINK-SC）</li>
<li>ChainLink智能合约汇总响应，加权得出一个最终反馈，并将其发送给用户智能合约</li>
</ul>
<p><img src="/2020/02/20/ChainLink-the-oracle-connecting-the-two-worlds/image-20200220171538145.png" alt="image-20200220171538145"></p>
<center>（来源于ChainLink白皮书）</center>
ChainLink目前以太坊为主构建，未来也会支持其他智能合约平台，例如跟物联网公链IoTeX和分片公链Harmony等都有合作。

<p>为了实现上述工作流程，ChainLink从架构上可以分为两个部分：链上部分和链下部分。</p>
<h3 id="ChainLink的加密世界部分"><a href="#ChainLink的加密世界部分" class="headerlink" title="ChainLink的加密世界部分"></a><strong>ChainLink的加密世界部分</strong></h3><p>ChainLink智能合约响应用户智能合约的数据请求或查询。它包括三个组成合约：声誉合约、订单匹配合约以及汇总合约。其中声誉合约记录的是预言机服务提供者的历史表现；订单匹配合约通过SLA（Service Level Agreement，服务水平协议）为预言机需求者提供选择，例如价格水平、预言机数量、声誉等，并根据需求确定预言机服务提供者；汇总合约汇总不同预言机的响应，并加权计算出最终结果。</p>
<p>总的来说，ChainLink链上的工作流有三步：一是，选择预言机；二是，报告数据；三是，汇总得出结果。</p>
<p>用户选择预言机主要是通过指定SLA提案，可以选择查询参数、预言机数量、声誉情况、价格水平等。根据这些，可以进行排序、过滤，最后作出选择。确定SLA提案之后，它会被提交到订单匹配智能合约，满足SLA要求的ChainLink节点选择是否对提案出价。如果预言机服务提供者出价，则会被提交至合约，同时附上质押金，如有不当行为，会被没收。一旦SLA接收到足够多的符合要求的出价，出价窗口关闭，并从这个出价池选择最终的预言机服务者。没被选上的则其押金会被退还。</p>
<p>一旦执行SLA任务的预言机被选定，接下来就是链下的预言机执行协议，并向链上报告数据。当预言机合约收到预言机提交的结果后，这些结果会被反馈到汇总合约。汇总合约计算加权结果，得出最终的反馈答案。加权答案会返回给用户智能合约，从而触发特定功能。同时，每个预言机响应的有效性都会反馈给声誉合约。</p>
<p>当然，这个汇总加权处理方式可以有多种。有的需要在进行汇总前将异常值去掉，比如可以抛弃离散值，比如在计算时，去掉最大和最小的值，并输出剩余值的中位数等。</p>
<h3 id="ChainLink的现实世界部分"><a href="#ChainLink的现实世界部分" class="headerlink" title="ChainLink的现实世界部分"></a><strong>ChainLink的现实世界部分</strong></h3><p>ChainLink的现实世界部分，也就是其链下部分，主要由预言机节点网络组成，这些节点连接到公链（如以太坊网络）。这些节点独立收集来自现实世界数据源的数据，以响应链上请求的需求。</p>
<p>ChainLink Core 节点软件负责与区块链交互，CHainLink节点的工作是完成各种任务。每个任务有一组小的子任务。每个子任务执行特定任务，然后将其结果传递到下一个子任务，由此得到最终结果。ChainLink节点软件内置了一些子任务，包括HTTP请求、JSON解析、转换为各种区块链格式等。</p>
<p>除内置子任务类型，通过创建适配器也可以自定义子任务。适配器是具有最小REST API的外部服务。通过以面向服务的方式对适配器建模，只需在程序前添加小的中间API，可实现任何编程语言的程序。很多适配器都是开源的，服务可以审计，且由不同的社区成员运行。各种不同的适配器由不同的开发者开发，确保适配器之间的兼容也关键。ChainLink与基于JSON模式的模式系统一起使用，以指定每个适配器需要什么输入以及如何来格式化它们。</p>
<h3 id="分散化是ChainLink实现安全连接的基础"><a href="#分散化是ChainLink实现安全连接的基础" class="headerlink" title="分散化是ChainLink实现安全连接的基础"></a><strong>分散化是ChainLink实现安全连接的基础</strong></h3><p>实现预言机本身并不算很难，难的是提供持续安全的预言机服务。上面蓝狐笔记也提到过，中心化预言机面临的难题包括单点失败、数据保密、数据不被篡改等。为了实现安全的预言机，去中心化的方式，也就是分散化的方式是实现安全的基础探索。</p>
<p>针对预言机可能出现的安全漏洞，ChainLink提出了去中心化为主的安全方法，其本质也就是分散化，其中包括数据源的去中心化、预言机节点的去中心化。当然只有去中心化还不够，ChainLink还考虑了使用可信硬件、对数据源数据进行签名等方法来确保安全。</p>
<p>首先是数据源的去中心化。如果只有一个数据源，一旦该数据源被黑客篡改、或停机等，那么预言机就不安全。分散化是一种解决方案。可以通过多个来源的数据，获得多个反馈，以分散风险。</p>
<p>其次是预言机节点的去中心化。不同的预言机节点可以从一个或多个数据源获取数据，同时也可防止部分恶意节点输入错误数据。即便其中部分预言机存在错误，只要通过ChainLink汇总合约的加权计算，也有机会得出更可靠的响应。</p>
<p>不过，这里存在搭便车问题。有的节点可能会为了节省收集数据成本，抄袭其他节点的响应数据，不仅对其他节点不公平，同时也实质上降低了预言机节点数据源的分散化，从而不利于安全。ChainLink会采用加密提交方式，由预言机节点发送加密的响应到CHAINLINK-SC智能合约，在达到一定数量，并发起第二轮时才会揭示反馈值。</p>
<p>ChainLink开始时采用的是合约内汇总的方式，长期来说会采用链外汇总的方式。合约内汇总的问题是成本问题，它会涉及链上预言机消息传输和处理的成本。如果节点多，这里可能会有很高的成本。更省钱的方法是在链外执行反馈的汇总，然后向CHAINLINK-SC发送一条消息。ChainLink还提出使用门限签名的方法（蓝狐笔记：threshold signature），例如使用Schnorr签名。链外汇总的系统利用了基于门限签名的分布式协议，可以防止f&lt;n/3预言机的搭便车抄袭情况。</p>
<h3 id="ChainLink实现预言机安全的其他措施"><a href="#ChainLink实现预言机安全的其他措施" class="headerlink" title="ChainLink实现预言机安全的其他措施"></a><strong>ChainLink实现预言机安全的其他措施</strong></h3><p>仅有去中心化（分散化）的方式，还无法实现全面的安全。ChainLink还考虑其他的措施，例如包括可信硬件、来源数据的数字签名、以及其安全服务。</p>
<p>可信硬件和数字签名方面是ChainLink实现预言机安全长期要做的事情。下面主要介绍在早期预言机服务中，ChainLink为提高安全的措施，也就是其主要安全服务，其中包括：验证系统、声誉系统、认证服务、合约升级服务。</p>
<p>首选看验证系统。ChainLink验证系统监控链上预言机的行为，并提供指标，帮助用户做选择。指标包括可用性和正确性。可用性主要记录预言机没有即时响应查询的失败次数。正确性就是指正确的响应。如果偏离值大，可以比较其他节点的响应得出。在链上处理汇总数据时，预言机的活动是可见的，不过在链下执行汇总时，就无法直接观察其可用性和正确性。对于链下反馈的正确性方面，ChainLink要求预言机对其响应进行数字签名，而其他节点可以报告有明显错误的行为（举报偏离值过大的节点），报告节点会获得奖励。可用性比较难监控，ChainLink要求预言机对从其他预言机收到的反馈结果进行数字签名的证明，也就是让别人来证明自己的成功率。验证合约会接受这些证明。</p>
<p>其次是声誉系统。声誉系统主要记录历史表现。主要包括：分配的请求总数（完成响应和未完成响应的）；已完成的请求总数，可以计算出完成的成功率；被接受的请求总数，通过计算被合约接受的请求总数，然后跟其他节点做比较，并与总完成的请求总数对比，由此得出准确率；平均响应时间：它基于完成的请求来计算；质押金额：被锁定的罚金数额，可以计算节点的犯错成本。为了获得好声誉，节点会正确行事。</p>
<p>最后是认证服务。认证服务主要是为高质量的预言机提供者做信用背书。不过这会被人们误认为是许可节点参与的意思。这种服务在早期为了获得安全存在的一定的必要性。当然长期看，能否找到更合适的方法也值得考虑。认证服务会监控验证系统的数据统计，尤其对高价值交易的响应进行审计，还有链下审计，包括事后审计等。同时，这么做也是考虑了女巫和镜像攻击的可能性。女巫攻击会通过控制预言机池，提供错误数据，影响最终答案。为减少操作成本，女巫攻击者还会采用镜像，这些恶意预言机会在链下共享数据，假装有独立数据源，这样结果是减少了数据源的分散化，降低了安全。长期看，这可以通过使用可信硬件来解决。短期则需要一些认证措施。</p>
<h2 id="ChainLink的价值从何而来"><a href="#ChainLink的价值从何而来" class="headerlink" title="ChainLink的价值从何而来"></a><strong>ChainLink的价值从何而来</strong></h2><p>LINK代币是其预言机数据交易市场的支付媒介，同时也是工作权利代币。ChainLink网络使用LINK代币向节点运行者支付费用，以获得节点提供的链下数据流中检索数据的服务、将数据格式化为区块链可读格式、链外计算、以及保证正常运行。用户智能合约为了使用ChainLink预言机节点，它们也需要向其所选的ChainLink节点支付运营费用。</p>
<p>由此可见，LINK的价值来源于ChainLink预言机服务市场的规模。</p>
<h2 id="去中心化预言机市场的潜力"><a href="#去中心化预言机市场的潜力" class="headerlink" title="去中心化预言机市场的潜力"></a><strong>去中心化预言机市场的潜力</strong></h2><p>去中心化预言机领域有多大？智能合约承载价值的规模越大，去中心化预言机的需求也就越大。假如Maker、Compound、dydx等DeFi项目的规模达到几十亿上百亿美元时，预言机安全的重要性可想而知，它需要更多的节点参与，更多的数据来源参与，更安全的技术基础（如数据加密和可信硬件等）设施参与，更多预言机安全方案的探索。</p>
<p>对于有数十亿上百亿规模的价值来说，其中几千万美元甚至几亿美元用来保证其安全也是值得的。支付给预言机的服务成本，其本质是安全成本。随着合成资产等衍生品市场的发展，这个市场有可能比现货市场的规模更大，所以，对安全的预言机服务的需求也会越来越大。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a><strong>结语</strong></h2><p>预言机是连通加密世界和现实世界的“中间件”。它关系到加密领域的可持续发展，尤其是对DeFi领域来说，其重要性显而易见。</p>
<p>而对预言机来说，最核心的是安全问题。只有解决了安全问题，它才有立身之本。在解决安全问题的方法中，去中心化是达成安全的重要方式。ChainLink提出了一系列的解决方案，包括数据来源的去中心化、预言机的去中心化、可信硬件、对数据的签名，以及安全服务措施（验证、声誉、认证、合约升级）等。它为人们在去中心化预言机领域的探索开启了一条道路。</p>
<p>同时，也有人认为ChainLink的去中心化程度还不够，在安全上还有提升空间。那么，不妨更多的预言机网络进来探索，以提供更多选择。接下来蓝狐笔记如有机会将关注预言机领域的其他选手。也许未来不只有ChainLink，还会有其他预言机网络也会随着智能合约应用的兴起而发展壮大。这个领域不会只有一家选手，随着市场增长，只要能够实现更安全的预言机，机会还有，格局未定。</p>
]]></content>
      <categories>
        <category>区块链</category>
        <category>预言机</category>
      </categories>
      <tags>
        <tag>区块链</tag>
        <tag>预言机</tag>
        <tag>ChainLink</tag>
        <tag>DeFi</tag>
      </tags>
  </entry>
</search>
